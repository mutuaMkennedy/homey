# Version of docker compose to use
version: '3.9'

# services we want to run
services:
  app:
    restart: always
    # image name and a tag name
    image: 759451633485.dkr.ecr.us-east-1.amazonaws.com/homey:app
    container_name: homey_django_container
    build: .
    expose:
      - 9000
    links:
      - postgres:postgres
      - redis:redis
    volumes:
    # persist static files beyond the life of the container
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    env_file:
      - ./.env
    depends_on:
      - postgres

  nginx:
    restart: always
    # image name and a tag name
    image: 759451633485.dkr.ecr.us-east-1.amazonaws.com/homey:nginx
    container_name: homey_nginx_container
    build: ./docker-services/nginx/
    ports:
      - "80:8000"
      - 443:443
    volumes:
      - static_volume:/vol/static
      - media_volume:/vol/media
      - /var/www/html:/var/www/html
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    links:
      - app:app
    depends_on:
      - app

  postgres:
    restart: always
    # image name and a tag name
    image: 759451633485.dkr.ecr.us-east-1.amazonaws.com/homey:postgres
    container_name: homey_postgres_container
    build: ./docker-services/postgres/
    ports:
      - "5432:5432"
    volumes:
      # persist db data beyond the life of the container
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}

  redis:
    restart: always
    image: 759451633485.dkr.ecr.us-east-1.amazonaws.com/homey:redis
    build: ./docker-services/redis/
    container_name: homey_redis_container
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data


volumes:
  static_volume:
  media_volume:
  pgdata:
  redisdata: